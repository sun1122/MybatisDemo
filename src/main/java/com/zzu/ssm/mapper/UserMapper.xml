<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace : 作用为了分类管理映射文件中的 Mapperdstatement 对象 -->
<mapper namespace="com.zzu.ssm.mapper.UserMapper">

    <!-- id : Mapperdstatement 唯一 标识-->
	<select id="findUserById" parameterType="int" resultType="user">
		select * from user where id=#{id}
	</select>


    <select id="findUserByUsername" parameterType="java.lang.String" 
			resultType="com.zzu.ssm.po.User">
	   select * from user where username like '%${value}%' 
	</select>

   <!-- 添加用户 -->
	<insert id="insertUser" parameterType="user">
	  insert into user(username,birthday,sex,address) 
	  values(#{username},#{birthday},#{sex},#{address})
	</insert>
   
   
   <insert id="insertUserReturnKey" parameterType="user">
	   insert into user(username,birthday,sex,address)
	    values(#{username},#{birthday},#{sex},#{address});
	    <!-- selectKey将主键返回，需要再返回 -->
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
   
   <!-- 删除用户 -->
	<delete id="deleteUserById" parameterType="int">
		delete from user where id=#{id}
	</delete>
   
   <update id="updateUser" parameterType="com.zzu.ssm.po.User">
		update user set username=#{username},birthday=#{birthday},sex=#{sex},address=#{address}
		where id=#{id}
   </update>
   

   <!-- 定义resultMap：将查询的列名和映射的pojo的属性名做一个对应关系 -->
	<!-- 
		type：指定查询结果要映射的pojo的类型
		id：指定resultMap的唯一标示
	 -->
	<resultMap type="user" id="userListResultMap">
		<!-- 
		id标签：映射查询结果的唯一列（主键列）
			column：查询sql的列名
			property：映射结果的属性名
		-->
		<id column="id_" property="id"/>
		<!-- result标签：映射查询结果的普通列 -->
		<result column="username_" property="username"/>
		<result column="birthday_" property="birthday"/>
	</resultMap>

	<!-- resultMap入门 -->
	<select id="findUserListResultMap" resultMap="userListResultMap">
		SELECT id id_,username username_,birthday birthday_ FROM user
	</select>


    <!-- 查询所有订单信息 -->
	<select id="findOrdersList" resultType="com.zzu.ssm.po.OrdersExt">
	SELECT
	orders.*,
	user.username,
	user.address
	FROM
	orders,	user
	WHERE orders.user_id = user.id 
	</select>



   <!-- 查询订单关联用户信息使用resultmap -->
	<resultMap type="OrdersExt" id="ordersAndUserRstMap">
		<id column="id" property="id"/>
		<result column="user_id" property="userid"/>
		<result column="number" property="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
		<!-- 一对一关联映射 -->
		<!-- 
		property:Orders对象的user属性
		javaType：user属性对应 的类型
		 -->
		<association property="user" javaType="User">
			<!-- column:user表的主键对应的列  property：user对象中id属性-->
			<id column="user_id" property="id"/>
			<result column="username" property="username"/>
			<result column="address" property="address"/>
		</association>
	</resultMap>
   

    <select id="findOrdersAndUserRstMap" resultMap="ordersAndUserRstMap">
		SELECT
			o.id,
			o.user_id,
			o.number,
			o.createtime,
			o.note,
			u.username,
			u.address
		FROM
			orders o
		JOIN user u ON u.id = o.user_id
	</select>
    
    
    
    <select id="findOrdersByUserId" parameterType="int" resultType="orders">
		select * from orders  where user_id=#{id}
	</select>
	
    <resultMap type="user" id="userAndOrderRstMap">
		<!-- 用户信息映射 -->
		<id property="id" column="id"/>
		<result property="username" column="username"/>
		<result property="birthday" column="birthday"/>
		<result property="sex" column="sex"/>
		<result property="address" column="address"/>
		<!-- 一对多关联映射 -->
		<collection property="orders" ofType="orders" column="id" fetchType="lazy" select="com.zzu.ssm.mapper.UserMapper.findOrdersByUserId">
			<id property="id" column="id"/>	
			<result property="userid" column="user_id"/>
			<result property="number" column="number"/>
			<result property="createtime" column="createtime"/>
			<result property="note" column="note"/>
		</collection>
	</resultMap>
	<!-- 主查询信息 用户信息 -->
	<select id="findUserAndOrderRstMap" parameterType="int" resultMap="userAndOrderRstMap">
		SELECT
		u.*
		FROM
		user u where id=#{id}
	</select>
    

</mapper>